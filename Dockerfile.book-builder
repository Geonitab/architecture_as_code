# Multi-stage Docker image for complete release building
FROM node:25-bullseye AS release-builder

# Install basic dependencies first
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Add Google Chrome repository and install Chrome
RUN wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list \
    && apt-get update \
    && apt-get install -y google-chrome-stable \
    && rm -rf /var/lib/apt/lists/*

# Install system dependencies including LaTeX
RUN apt-get update && apt-get install -y \
    # LaTeX and document processing
    texlive-xetex \
    texlive-fonts-recommended \
    texlive-plain-generic \
    texlive-latex-extra \
    texlive-luatex \
    texlive-fonts-extra \
    # Additional tools
    librsvg2-bin \
    fonts-liberation \
    fonts-dejavu \
    fonts-lmodern \
    lmodern \
    python3 \
    python3-pip \
    zip \
    # Java for EPUBCheck
    openjdk-11-jdk \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Install EPUBCheck for EPUB validation
RUN cd /tmp && \
    wget -q https://github.com/w3c/epubcheck/releases/download/v5.1.0/epubcheck-5.1.0.zip && \
    unzip -q epubcheck-5.1.0.zip && \
    mv epubcheck-5.1.0 /opt/ && \
    ln -sf /opt/epubcheck-5.1.0/epubcheck.jar /usr/local/bin/ && \
    echo '#!/bin/bash\njava -jar /opt/epubcheck-5.1.0/epubcheck.jar "$@"' > /usr/local/bin/epubcheck && \
    chmod +x /usr/local/bin/epubcheck && \
    rm -f epubcheck-5.1.0.zip

# Install Pandoc
ARG PANDOC_VERSION=3.1.9
RUN wget -q https://github.com/jgm/pandoc/releases/download/${PANDOC_VERSION}/pandoc-${PANDOC_VERSION}-1-amd64.deb \
    && dpkg -i pandoc-${PANDOC_VERSION}-1-amd64.deb \
    && rm pandoc-${PANDOC_VERSION}-1-amd64.deb

# Install Node.js dependencies
RUN npm install -g @mermaid-js/mermaid-cli

# Install Python dependencies
RUN pip3 install python-pptx>=0.6.21 PyYAML>=6.0

# Set Chrome executable for Puppeteer with proper sandbox configuration
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV CHROME_FLAGS="--no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage --disable-accelerated-2d-canvas --no-first-run --no-zygote --disable-gpu"

# Setup Pandoc template
RUN mkdir -p ~/.local/share/pandoc/templates
RUN pandoc --print-default-template=latex > ~/.local/share/pandoc/templates/eisvogel.latex

# Try to download Eisvogel template if available
RUN wget -qO- https://github.com/Wandmalfarbe/pandoc-latex-template/releases/latest/download/Eisvogel.tar.gz | \
    tar -xz -C /tmp/ 2>/dev/null && \
    find /tmp -name "eisvogel.latex" -exec cp {} ~/.local/share/pandoc/templates/ \; 2>/dev/null || \
    echo "Using default template"

# Create working directory
WORKDIR /workspace

# Copy build scripts
COPY build_release.sh /usr/local/bin/build_release.sh
COPY docs/build_book.sh /usr/local/bin/build_book.sh
COPY generate_book.py /usr/local/bin/generate_book.py
COPY generate_whitepapers.py /usr/local/bin/generate_whitepapers.py
COPY generate_presentation.py /usr/local/bin/generate_presentation.py

RUN chmod +x /usr/local/bin/build_release.sh \
    && chmod +x /usr/local/bin/build_book.sh

# Default to running the complete release build
ENTRYPOINT ["/usr/local/bin/build_release.sh"]