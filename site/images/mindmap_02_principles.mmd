%%{init: {"theme": "base", "themeVariables": {"primaryColor": "#1E3A8A", "primaryTextColor": "#F8FAFC", "secondaryColor": "#2563EB", "tertiaryColor": "#BFDBFE", "background": "#F8FAFF", "lineColor": "#1E3A8A", "textColor": "#0F172A", "fontFamily": "Inter, 'Segoe UI', sans-serif", "mindmapBranchColor": "#1E3A8A", "mindmapLeafColor": "#2563EB"}}}%%
mindmap
  root((Fundamental Principles for AaC))
    Declarative Architecture Definition
      Desired System State
        Infrastructure as Code
        API Contracts
        Organisational Structures
      Benefits
        Reproducibility
        Automation
        Traceability
    Holistic Codification Perspective
      Scope
        Application Logic
        Data Flows
        Security Policies
        Compliance Rules
      Integration
        End-to-end Automation
        Change Propagation
        Unified Codification
    Immutable Architecture Patterns
      Principles
        Version Control
        No Modification
        Replacement Strategy
      Advantages
        Predictability
        Eliminates Drift
        Quality Control
    Testability at Architecture Level
      Scope
        Architecture Patterns
        Design Principles
        End-to-end Flows
      Tools
        IaC Testing
        Architecture Tests
        Compliance Validation
