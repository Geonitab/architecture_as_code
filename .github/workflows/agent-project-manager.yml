name: Project Manager Agent

on:
  workflow_dispatch:
    inputs:
      objective:
        description: "Which goal should the Project Manager agent focus on?"
        required: false
        default: "No specific objective provided."
      sprint_context:
        description: "Additional context, links, or blockers affecting the sprint"
        required: false
        default: ""
      backlog_updates:
        description: "List of new or updated backlog items"
        required: false
        default: ""
      trigger_architect:
        description: "Should the Architect agent be triggered?"
        required: false
        default: false
        type: boolean
  workflow_call:
    inputs:
      objective:
        required: false
        type: string
        default: "No specific objective provided."
      sprint_context:
        required: false
        type: string
        default: ""
      backlog_updates:
        required: false
        type: string
        default: ""
      trigger_architect:
        required: false
        type: boolean
        default: false
    outputs:
      plan:
        description: "Summary of the Project Manager plan"
        value: ${{ jobs.plan.outputs.plan }}

jobs:
  plan:
    name: Compile Project Manager plan
    runs-on: ubuntu-latest
    outputs:
      plan: ${{ steps.compose.outputs.plan }}
    steps:
      - name: Compose plan
        id: compose
        env:
          OBJECTIVE: ${{ inputs.objective }}
          SPRINT_CONTEXT: ${{ inputs.sprint_context }}
          BACKLOG_UPDATES: ${{ inputs.backlog_updates }}
        run: |
          set -euo pipefail
          objective="${OBJECTIVE:-No specific objective provided.}"
          context_value="${SPRINT_CONTEXT:-}"
          if [ -z "$context_value" ]; then
            context_value="No additional context provided."
          fi
          backlog_value="${BACKLOG_UPDATES:-}"
          if [ -z "$backlog_value" ]; then
            backlog_value="No backlog updates provided."
          fi

          export AGENT_OBJECTIVE="$objective"
          export AGENT_CONTEXT="$context_value"
          export AGENT_BACKLOG="$backlog_value"

          summary=$(
            cat <<PLAN
# Project Manager plan

## Objectives
$AGENT_OBJECTIVE

## Context
$AGENT_CONTEXT

## Backlog updates
$AGENT_BACKLOG

## Primary responsibilities from 28_ai_agent_team.md
- Translate the project owner's directives into sprint goals and tasks.
- Prioritize the backlog and coordinate specialist roles.
- Lead daily syncs and escalate blockers.
- Consolidate status, risks, and recommendations for the project owner.

## Recommended workflow
1. Confirm sprint goals and define accepted deliverables.
2. Coordinate dependencies between the Architect, Requirements Analyst, Designer, and Developer.
3. Ensure Quality Control and the Editor have planned quality reviews.
4. Update reporting with KPIs (lead time, blockers, test status, documentation state).
5. Prepare the sprint report with clear decision points for the project owner.

## Ceremonies to facilitate
- Sprint planning
- Daily syncs
- Sprint demo and retrospective

## Expected deliverables
- Updated sprint backlog
- Daily status notes from each role
- Sprint report for the project owner
PLAN
          )

          printf '%s\n' "$summary"
          printf '%s\n' "$summary" >> "$GITHUB_STEP_SUMMARY"
          {
            echo "plan<<EOF"
            printf '%s\n' "$summary"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

  architect:
    name: Trigger Architect agent
    needs: plan
    if: ${{ inputs.trigger_architect == true || inputs.trigger_architect == 'true' }}
    uses: ./.github/workflows/agent-architect.yml
    with:
      objective: ${{ format('Architect support for: {0}', inputs.objective) }}
      architecture_context: ${{ inputs.sprint_context }}
      collaboration_notes: ${{ needs.plan.outputs.plan }}
    secrets: inherit
