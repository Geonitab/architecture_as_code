name: Build All – Orchestrator

concurrency:
  group: orchestrate-all-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create GitHub Release from combined artefacts'
        type: boolean
        default: true

permissions:
  contents: write

env:
  ARTIFACT_RETENTION_DAYS: 30

jobs:
  book:
    name: Book
    uses: ./.github/workflows/book.yml

  whitepapers:
    name: Whitepapers
    uses: ./.github/workflows/whitepapers.yml

  presentations:
    name: Presentations
    uses: ./.github/workflows/presentations.yml

  site:
    name: Site
    uses: ./.github/workflows/site.yml

  finalise:
    name: Finalise & (optional) Release
    runs-on: ubuntu-latest
    needs: [book, whitepapers, presentations, site]
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download artefacts
        uses: actions/download-artifact@v5
        with:
          pattern: '*'
          path: final-release
          merge-multiple: true

      - name: Normalise book deliverables
        run: |
          echo "=== Collecting book artefacts ==="
          mkdir -p final-release/book
          for ext in pdf epub docx; do
            match=$(find final-release -maxdepth 3 \( -path final-release/book -prune -o -name "architecture_as_code.${ext}" -print \) | head -n 1)
            if [ -z "$match" ]; then
              echo "::error::Missing architecture_as_code.${ext} in build artefacts"
              exit 1
            fi
            echo "Found $match"
            cp "$match" "final-release/book/architecture_as_code.${ext}"
            ls -lh "final-release/book/architecture_as_code.${ext}"
          done

      - name: Normalise presentation deliverable
        run: |
          echo "=== Collecting presentation artefact ==="
          mkdir -p final-release/presentation
          match=$(find final-release -maxdepth 5 \( -path final-release/presentation -prune -o -name "architecture_as_code_presentation.pptx" -print \) | head -n 1)
          if [ -z "$match" ]; then
            echo "::error::Missing architecture_as_code_presentation.pptx in build artefacts"
            exit 1
          fi
          echo "Found $match"
          cp "$match" final-release/presentation/architecture_as_code_presentation.pptx
          ls -lh final-release/presentation/architecture_as_code_presentation.pptx

      - name: Show structure
        run: |
          echo "=== Directories ==="; find final-release -type d | sort || true
          echo "=== Files ===";      find final-release -type f | sort || true

      - name: Build combined zip
        run: |
          cd final-release
          zip -r ../non-docker-release.zip .
          cd ..
          ls -lh non-docker-release.zip

      - name: Summarise release artefacts
        id: artefact_summary
        run: |
          set -euo pipefail
          shopt -s nullglob globstar

          declare -a patterns=(
            "final-release/**/*.pdf"
            "final-release/**/*.epub"
            "final-release/**/*.docx"
            "final-release/**/*.pptx"
            "non-docker-release.zip"
          )

          summary=""

          for pattern in "${patterns[@]}"; do
            matches=($pattern)
            count=${#matches[@]}

            if [[ $count -eq 0 ]]; then
              echo "Pattern '${pattern}' matched no files."
              summary+="- ${pattern}: not present\n"
            else
              echo "Pattern '${pattern}' matched ${count} file(s):"
              printf '  %s\n' "${matches[@]}"
              summary+="- ${pattern}: ${count} file(s)\n"
            fi
          done

          {
            echo "summary<<'EOF'"
            printf "%s" "$summary"
            echo
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Upload combined archive artefact
        uses: actions/upload-artifact@v4
        with:
          name: non-docker-release-archive
          path: non-docker-release.zip
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

      - name: Create GitHub Release
        if: ${{ (github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && inputs.create_release) }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}-native
          name: "Architecture as Code v${{ github.run_number }} – Native Release"
          body: |
            Combined outputs from Book, Whitepapers, Presentations, and Site.
            Commit: ${{ github.sha }}
            Artefact availability:
            ${{ steps.artefact_summary.outputs.summary }}
          files: |
            final-release/book/architecture_as_code.pdf
            final-release/book/architecture_as_code.epub
            final-release/book/architecture_as_code.docx
            final-release/presentation/architecture_as_code_presentation.pptx
            non-docker-release.zip
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
