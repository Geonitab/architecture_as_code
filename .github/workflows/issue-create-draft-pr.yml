name: Issue → create/reuse draft PR

on:
  issues:
    types: [opened, reopened]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  create_or_reuse_draft_pr:
    runs-on: ubuntu-latest
    env:
      REPO: ${{ github.repository }}
      ISSUE_NUMBER: ${{ github.event.issue.number }}
      ISSUE_TITLE: ${{ github.event.issue.title }}

    steps:
      - name: Enable debug logging
        run: echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Determine default branch
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          DEFAULT_BRANCH=$(gh repo view "$REPO" --json defaultBranchRef --jq .defaultBranchRef.name)
          echo "DEFAULT_BRANCH=$DEFAULT_BRANCH" >> $GITHUB_ENV

      - name: Find or create branch with empty commit
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          PREFIX="refs/heads/codex/issue-${ISSUE_NUMBER}-*"
          EXISTING=$(git ls-remote --heads origin "$PREFIX" \
            | awk '{print $2}' | sed 's#refs/heads/##' | head -n1 || true)

          if [[ -n "${EXISTING:-}" ]]; then
            BRANCH="$EXISTING"
            echo "::debug::Reusing branch: $BRANCH"
            git fetch origin "$BRANCH" --depth=1
            git switch -C "$BRANCH" "origin/$BRANCH"
          else
            SLUG=$(printf '%s' "$ISSUE_TITLE" | tr '[:upper:]' '[:lower:]' | tr -cs 'a-z0-9' '-' | sed 's/^-//;s/-$//' | cut -c1-40)
            BRANCH="codex/issue-${ISSUE_NUMBER}${SLUG:+-$SLUG}"
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git fetch origin "$DEFAULT_BRANCH" --depth=1
            git switch -c "$BRANCH" "origin/$DEFAULT_BRANCH"
            git commit --allow-empty -m "Init draft for issue #${ISSUE_NUMBER}"
            git push --set-upstream origin "$BRANCH"
          fi

          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Ensure draft PR exists (create if missing)
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          set +e
          PR_JSON=$(gh pr view "$BRANCH" --json number,url --repo "$REPO" 2>/dev/null)
          RC=$?
          set -e
          if [ $RC -eq 0 ] && [ -n "$PR_JSON" ]; then
            PR_NUMBER=$(echo "$PR_JSON" | jq -r .number)
            PR_URL=$(echo "$PR_JSON" | jq -r .url)
          else
            PR_URL=$(gh pr create \
              --base "$DEFAULT_BRANCH" \
              --head "$BRANCH" \
              --title "Draft: Issue #$ISSUE_NUMBER – $ISSUE_TITLE" \
              --body "This draft PR was automatically created for this issue.

              Closes #$ISSUE_NUMBER" \
              --draft \
              --repo "$REPO")
            PR_NUMBER=$(gh pr view "$BRANCH" --json number --jq .number --repo "$REPO")
          fi
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "PR_URL=$PR_URL" >> $GITHUB_ENV

      - name: Summary
        run: |
          echo "::notice::Draft PR ensured: $PR_URL (##$PR_NUMBER) on branch $BRANCH"