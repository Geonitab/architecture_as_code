name: Auto create draft PRs for issues without PRs

on:
  issues:
    types: [opened, reopened]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  create_or_reuse_draft_pr:
    runs-on: ubuntu-latest

    env:
      GH_REPO: ${{ github.repository }}
      GH_TOKEN: ${{ secrets.BOT_ISSUE }}

    steps:
      - name: Checkout (no Actions bot creds)
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Configure git as BOT_ISSUE user
        run: |
          set -euo pipefail
          NAME=$(gh api user --jq .name)
          EMAIL=$(gh api user/emails --jq 'map(select(.primary==true))[0].email' || true)
          git config user.name "${NAME:-codex-bot}"
          git config user.email "${EMAIL:-codex-bot@example.invalid}"
          git remote set-url origin "https://x-access-token:${GH_TOKEN}@github.com/${GH_REPO}.git"

      - name: Determine default branch
        run: |
          set -euo pipefail
          DEFAULT_BRANCH=$(gh repo view "$GH_REPO" --json defaultBranchRef --jq .defaultBranchRef.name)
          echo "DEFAULT_BRANCH=$DEFAULT_BRANCH" >> "$GITHUB_ENV"

      - name: Build issue list (single issue or all open)
        id: issues
        run: |
          set -euo pipefail
          # Om detta triggas via issue-event
          if [ "${{ github.event_name }}" = "issues" ]; then
            echo "${{ github.event.issue.number }}" > issues.txt
          else
            # Vid manuell körning – hämta alla öppna issues
            gh issue list --repo "$GH_REPO" --state open --json number --jq '.[].number' > issues.txt
          fi
          echo "Issues to process:"
          cat issues.txt

      - name: Process issues (create PRs where missing)
        run: |
          set -euo pipefail

          while read -r ISSUE_NUMBER; do
            echo "::group::Processing issue #$ISSUE_NUMBER"

            TITLE=$(gh issue view "$ISSUE_NUMBER" --repo "$GH_REPO" --json title --jq .title)
            BODY=$(gh issue view "$ISSUE_NUMBER" --repo "$GH_REPO" --json body --jq .body)

            # Kontrollera om PR redan finns kopplad till detta issue
            LINKED_PR=$(gh pr list --repo "$GH_REPO" --state all --search "Closes #${ISSUE_NUMBER}" --json number --jq '.[].number' || true)
            if [ -n "$LINKED_PR" ]; then
              echo "PR already exists for issue #$ISSUE_NUMBER (#$LINKED_PR) — skipping."
              echo "::endgroup::"
              continue
            fi

            # Annars skapa eller återanvänd branch
            EXISTING=$(git ls-remote --heads origin "refs/heads/codex/issue-${ISSUE_NUMBER}-*" | awk '{print $2}' | sed 's#refs/heads/##' | head -n1)
            if [ -n "$EXISTING" ]; then
              BRANCH="$EXISTING"
              git fetch origin "$BRANCH" --depth=1
              git switch "$BRANCH"
            else
              SLUG=$(printf '%s' "$TITLE" | tr '[:upper:]' '[:lower:]' | tr -cs 'a-z0-9' '-' | sed 's/^-//;s/-$//' | cut -c1-40)
              BRANCH="codex/issue-${ISSUE_NUMBER}${SLUG:+-$SLUG}"
              git fetch origin "$DEFAULT_BRANCH" --depth=1
              git switch -c "$BRANCH" "origin/$DEFAULT_BRANCH"
              git commit --allow-empty -m "Init draft for issue #${ISSUE_NUMBER}"
              git push --set-upstream origin "$BRANCH"
            fi

            # Skapa PR (om inte redan finns)
            PR_URL=$(gh pr create \
              --base "$DEFAULT_BRANCH" \
              --head "$BRANCH" \
              --title "Draft: Issue #$ISSUE_NUMBER – $TITLE" \
              --body "This draft PR was auto-created for Issue #$ISSUE_NUMBER.

Closes #$ISSUE_NUMBER" \
              --draft \
              --repo "$GH_REPO" || true)

            if [ -n "$PR_URL" ]; then
              echo "Created draft PR for issue #$ISSUE_NUMBER → $PR_URL"
              gh issue comment "$ISSUE_NUMBER" --repo "$GH_REPO" --body "Draft PR created for this issue: $PR_URL"
            fi

            echo "::endgroup::"
          done < issues.txt