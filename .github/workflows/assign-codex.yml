name: Auto create draft PR from new or reopened issue

on:
  issues:
    types: [opened, reopened]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  create_or_reuse_draft_pr:
    runs-on: ubuntu-latest

    # Sätt GH_TOKEN på jobbnivå = färre uttryck inuti stegen
    env:
      GH_REPO: ${{ github.repository }}
      GH_TOKEN: ${{ secrets.BOT_ISSUE }}
      ISSUE_NUMBER: ${{ github.event.issue.number }}
      ISSUE_TITLE: ${{ github.event.issue.title }}

    steps:
      - name: Checkout (no Actions bot creds)
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Configure git as PAT owner
        run: |
          set -euo pipefail
          # Hämta namn/e-post för PAT-ägaren (kräver user:email scope för e-post)
          NAME=$(gh api user --jq .name)
          EMAIL=$(gh api user/emails --jq 'map(select(.primary==true))[0].email' || true)
          git config user.name "${NAME:-codex-bot}"
          git config user.email "${EMAIL:-codex-bot@example.invalid}"

      - name: Determine default branch
        id: def
        run: |
          set -euo pipefail
          DEFAULT_BRANCH=$(gh repo view "$GH_REPO" --json defaultBranchRef --jq .defaultBranchRef.name)
          echo "DEFAULT_BRANCH=$DEFAULT_BRANCH" >> "$GITHUB_ENV"

      - name: Prepare remote with PAT
        run: |
          set -euo pipefail
          git remote set-url origin "https://x-access-token:${GH_TOKEN}@github.com/${GH_REPO}.git"

      - name: Find or create branch
        id: branch
        run: |
          set -euo pipefail
          EXISTING=$(git ls-remote --heads origin "refs/heads/codex/issue-${ISSUE_NUMBER}-*" | awk '{print $2}' | sed 's#refs/heads/##' | head -n1)
          if [ -n "$EXISTING" ]; then
            BRANCH="$EXISTING"
            git fetch origin "$BRANCH" --depth=1
            git switch "$BRANCH"
          else
            SLUG=$(printf '%s' "$ISSUE_TITLE" | tr '[:upper:]' '[:lower:]' | tr -cs 'a-z0-9' '-' | sed 's/^-//;s/-$//' | cut -c1-40)
            BRANCH="codex/issue-${ISSUE_NUMBER}${SLUG:+-$SLUG}"
            git fetch origin "$DEFAULT_BRANCH" --depth=1
            git switch -c "$BRANCH" "origin/$DEFAULT_BRANCH"
            git commit --allow-empty -m "Init draft for issue #${ISSUE_NUMBER}"
            git push --set-upstream origin "$BRANCH"
          fi
          echo "BRANCH=$BRANCH" >> "$GITHUB_ENV"

      - name: Create or reuse draft PR (as BOT_ISSUE)
        id: pr
        run: |
          set -euo pipefail
          if gh pr view "$BRANCH" --repo "$GH_REPO" >/dev/null 2>&1; then
            PR_JSON=$(gh pr view "$BRANCH" --json number,url --repo "$GH_REPO")
          else
            # Obs: --body får radbrytningar via \n
            gh pr create \
              --base "$DEFAULT_BRANCH" \
              --head "$BRANCH" \
              --title "Draft: Issue #$ISSUE_NUMBER – $ISSUE_TITLE" \
              --body "This draft PR was auto-created for Issue #$ISSUE_NUMBER.\n\nCloses #$ISSUE_NUMBER" \
              --draft \
              --repo "$GH_REPO"
            PR_JSON=$(gh pr view "$BRANCH" --json number,url --repo "$GH_REPO")
          fi
          echo "$PR_JSON" | jq -r '.number' > pr_number.txt
          echo "$PR_JSON" | jq -r '.url' > pr_url.txt
          echo "PR_NUMBER=$(cat pr_number.txt)" >> "$GITHUB_ENV"
          echo "PR_URL=$(cat pr_url.txt)" >> "$GITHUB_ENV"

      - name: Comment on PR
        run: |
          set -euo pipefail
          gh api repos/$GH_REPO/issues/$PR_NUMBER/comments \
            -f body='@codex - Fix the issue using this draft PR.'

      - name: Comment in original issue
        run: |
          set -euo pipefail
          gh api repos/$GH_REPO/issues/$ISSUE_NUMBER/comments \
            -f body="A draft PR has been created or reused for this issue: ${PR_URL}\n\n@codex - please take a look."