name: Build Book (Fast with Docker)

"on":
  push:
    branches: [main]
    paths:
      - 'docs/**/*.md'
      - 'docs/images/**/*.mmd'
      - '.github/workflows/build-book-fast.yml'
      - 'generate_book.py'
      - 'Dockerfile.book-builder'
  pull_request:
    branches: [main]
    paths:
      - 'docs/**/*.md'
      - 'docs/images/**/*.mmd'
      - '.github/workflows/build-book-fast.yml'
      - 'generate_book.py'
      - 'Dockerfile.book-builder'
  workflow_dispatch: {}

env:
  ARTIFACT_RETENTION_DAYS: 30

jobs:
  build-book:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 📦 Build Docker image with cache
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.book-builder
          tags: book-builder:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: 📝 Generate book content
        run: |
          echo "=== Generating book content ==="
          python3 generate_book.py
          echo "✅ Book content generated"

      - name: 🔧 Create build script wrapper
        run: |
          cat > build_wrapper.sh << 'EOF'
          #!/bin/bash
          set -e
          
          echo "=== Converting Mermaid diagrams ==="
          cd /workspace/docs
          diagram_count=0
          
          if ls images/*.mmd 1> /dev/null 2>&1; then
            for mmd_file in images/*.mmd; do
              if [ -f "$mmd_file" ]; then
                png_file="${mmd_file%.mmd}.png"
                echo "Converting $mmd_file → $png_file"
                
                mmdc \
                  -i "$mmd_file" \
                  -o "$png_file" \
                  -t dark \
                  -b transparent \
                  --width 1200 \
                  --height 800 \
                  || echo "⚠️ Warning: Failed to convert $mmd_file"
                
                diagram_count=$((diagram_count + 1))
              fi
            done
            echo "✅ Processed $diagram_count Mermaid diagrams"
          else
            echo "ℹ️ No Mermaid diagrams found to convert"
          fi
          
          echo "=== Building PDF book ==="
          
          # Check if pandoc.yaml config exists
          if [ ! -f "pandoc.yaml" ]; then
            echo "❌ Error: Pandoc configuration file missing (pandoc.yaml)"
            exit 1
          fi
          
          # Define chapter files
          CHAPTER_FILES=(
            "01_inledning.md"
            "02_grundlaggande_principer.md"
            "03_versionhantering.md"
            "04_adr.md"
            "05_automatisering_devops_cicd.md"
            "06_molnarkitektur.md"
            "07_containerisering.md"
            "08_microservices.md"
            "09_sakerhet.md"
            "10_policy_sakerhet.md"
            "11_compliance.md"
            "12_teststrategier.md"
            "13_praktisk_implementation.md"
            "14_kostnadsoptimering.md"
            "15_migration.md"
            "16_organisatorisk_forandring.md"
            "17_team_struktur.md"
            "18_digitalisering.md"
            "19_lovable_mockups.md"
            "20_framtida_trender.md"
            "21_best_practices.md"
            "22_slutsats.md"
            "23_ordlista.md"
            "24_om_forfattarna.md"
            "25_framtida_utveckling.md"
            "26_appendix_kodexempel.md"
            "27_teknisk_uppbyggnad.md"
          )
          
          # Check if required files exist
          missing_files=""
          for file in "${CHAPTER_FILES[@]}"; do
            if [ ! -f "$file" ]; then
              missing_files="$missing_files $file"
            fi
          done
          
          if [ -n "$missing_files" ]; then
            echo "❌ Error: Missing required files:$missing_files"
            echo "Available files:"
            ls *.md
            exit 1
          fi
          
          echo "✅ All required chapter files found"
          
          # Build PDF with Pandoc
          echo "Generating PDF with Pandoc configuration..."
          pandoc --defaults=pandoc.yaml "${CHAPTER_FILES[@]}" -o arkitektur_som_kod.pdf
          
          # Verify PDF was created
          if [ -f "arkitektur_som_kod.pdf" ]; then
            file_size=$(ls -lh arkitektur_som_kod.pdf | awk '{print $5}')
            echo "✅ PDF generated successfully (Size: $file_size)"
          else
            echo "❌ Failed to generate PDF"
            exit 1
          fi
          EOF
          
          chmod +x build_wrapper.sh

      - name: 🏗️ Build book in Docker container
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            book-builder:latest \
            bash /workspace/build_wrapper.sh

      - name: 📊 Book build summary
        run: |
          echo "=== Build Summary ==="
          echo "Markdown files: $(ls docs/*.md | wc -l)"
          echo "Mermaid diagrams: $(ls docs/images/*.mmd 2>/dev/null | wc -l || echo 0)"
          echo "Generated PNGs: $(ls docs/images/*.png 2>/dev/null | wc -l || echo 0)"
          if [ -f "docs/arkitektur_som_kod.pdf" ]; then
            echo "PDF size: $(ls -lh docs/arkitektur_som_kod.pdf | awk '{print $5}')"
          fi
          echo "Build completed at: $(date)"

      - name: 📤 Upload PDF artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: arkitektur-som-kod-pdf-fast
          path: docs/arkitektur_som_kod.pdf
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

      - name: 📤 Upload book images
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: book-diagrams-fast
          path: docs/images/*.png
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
          if-no-files-found: warn

      - name: 🚀 Create Release (on main branch)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}-fast
          name: "Arkitektur som kod v${{ github.run_number }} (Fast Build)"
          body: |
            📚 **Arkitektur som kod - Snabb Docker-baserad release**
            
            Genererad från commit: ${{ github.sha }}
            
            **Innehåll:**
            - 📖 Komplett PDF-bok (Docker-genererad)
            - 🖼️ Mermaid-diagram som PNG-filer
            
            **Optimeringar:**
            - 🐳 Docker-baserad byggprocess
            - 📦 Optimerad caching av dependencies
            - ⚡ Parallell installation av verktyg
            - 🚀 Reducerad byggtid från ~90 till ~30 minuter
            
            Ladda ner PDF:en från Assets nedan ⬇️
          files: |
            docs/arkitektur_som_kod.pdf
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}