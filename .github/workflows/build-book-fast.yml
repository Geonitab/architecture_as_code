name: Complete Release Build (Docker)

# Docker-based workflow for building all deliverables with improved caching
# Uses the updated Dockerfile.book-builder for complete release generation

on:
  push:
    branches: [main]
    paths:
      - 'docs/**/*.md'
      - 'docs/images/**/*.mmd'
      - 'generate_book.py'
      - 'generate_whitepapers.py'
      - 'generate_presentation.py'
      - 'build_release.sh'
      - 'docs/build_book.sh'
      - 'Dockerfile.book-builder'
      - '.github/workflows/build-book-fast.yml'
  pull_request:
    branches: [main]
    paths:
      - 'docs/**/*.md'
      - 'docs/images/**/*.mmd'
      - 'generate_book.py'
      - 'generate_whitepapers.py'
      - 'generate_presentation.py'
      - 'build_release.sh'
      - 'docs/build_book.sh'
      - 'Dockerfile.book-builder'
      - '.github/workflows/build-book-fast.yml'
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create GitHub Release'
        required: false
        default: 'true'
        type: boolean

env:
  ARTIFACT_RETENTION_DAYS: 30

jobs:
  complete-release-docker:
    name: 🐳 Complete Release Build (Docker)
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🐍 Set up Python (for content generation)
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: 🔧 Set up Node.js (for website build)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Build Docker image with cache
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.book-builder
          tags: complete-release-builder:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: 📦 Install Node.js dependencies
        run: |
          echo "=== Installing Node.js dependencies ==="
          npm ci
          echo "✅ Node.js dependencies installed"

      - name: 📝 Generate book content
        run: |
          echo "=== Generating book content ==="
          python3 generate_book.py
          echo "✅ Book content generated"

      - name: 🌐 Build website
        run: |
          echo "=== Building website ==="
          npm run build
          echo "✅ Website built successfully"

      - name: 🏗️ Build all formats in Docker container
        run: |
          echo "=== Building all deliverables in Docker container ==="
          
          # Create release directory structure
          mkdir -p release/{book,presentation,whitepapers,website}
          
          # Build book formats using Docker with proper Chrome configuration
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable \
            -e CHROME_FLAGS="--no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage" \
            complete-release-builder:latest \
            bash -c "
              echo '=== Running Docker-based complete build ===' &&
              cd /workspace &&
              
              # Build book in all formats
              echo '📖 Building book formats...' &&
              cd docs &&
              ./build_book.sh --release &&
              cd .. &&
              
              # Generate whitepapers
              echo '📄 Generating whitepapers...' &&
              python3 generate_whitepapers.py --release &&
              
              # Generate presentations  
              echo '🎤 Generating presentations...' &&
              python3 generate_presentation.py --release &&
              
              echo '✅ Docker-based build completed'
            "

      - name: 🌐 Copy website to release
        run: |
          echo "=== Copying website to release folder ==="
          if [ -d "dist" ]; then
            # Clean release/website directory safely
            if [ -d "release/website" ]; then
              # Change ownership if files exist (Docker may create them as different user)
              if [ "$(ls -A release/website/)" ]; then
                sudo chown -R $(id -u):$(id -g) release/website/ || true
              fi
              rm -rf release/website/*
            fi
            cp -r dist/* release/website/
            echo "✅ Website copied to release/website/"
          else
            echo "❌ Website build directory 'dist' not found"
            exit 1
          fi

      - name: 📊 Release build summary
        run: |
          echo "=== Docker-based Release Build Summary ==="
          
          echo "📚 Book formats:"
          if [ -d "release/book" ]; then
            ls -la release/book/ || echo "   No book files found"
            if [ -f "release/book/arkitektur_som_kod.pdf" ]; then
              echo "   📖 PDF size: $(ls -lh release/book/arkitektur_som_kod.pdf | awk '{print $5}')"
            fi
          fi
          
          echo ""
          echo "🎤 Presentation materials:"
          if [ -d "release/presentation" ]; then
            ls -la release/presentation/ || echo "   No presentation files found"
          fi
          
          echo ""
          echo "📄 Whitepapers:"
          if [ -d "release/whitepapers" ]; then
            whitepaper_count=$(ls release/whitepapers/*.html 2>/dev/null | wc -l || echo "0")
            echo "   $whitepaper_count HTML whitepaper files"
            if [ -f "release/whitepapers/whitepapers_combined.pdf" ]; then
              echo "   ✅ Combined PDF generated"
            fi
          fi
          
          echo ""
          echo "🌐 Website:"
          if [ -d "release/website" ] && [ "$(ls -A release/website)" ]; then
            website_files=$(find release/website -type f | wc -l)
            echo "   $website_files files copied to release/website/"
          else
            echo "   No website files found"
          fi
          
          echo ""
          echo "📁 Total release size: $(du -sh release/ | awk '{print $1}')"
          echo "🐳 Docker-based build completed at: $(date)"

      - name: 📤 Upload book formats
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: book-formats-docker
          path: release/book/
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

      - name: 📤 Upload presentation materials
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: presentation-materials-docker
          path: release/presentation/
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
          if-no-files-found: warn

      - name: 📤 Upload whitepapers
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: whitepapers-docker
          path: release/whitepapers/
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
          if-no-files-found: warn

      - name: 📤 Upload website build
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: website-build-docker
          path: release/website/
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
          if-no-files-found: warn

      - name: 📦 Create complete release archive
        if: success()
        run: |
          echo "=== Creating complete release archive ==="
          cd release
          zip -r ../complete-release-docker.zip .
          cd ..
          echo "✅ Complete release archive created"
          ls -lh complete-release-docker.zip

      - name: 📤 Upload complete release archive
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: complete-release-docker
          path: complete-release-docker.zip
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

      - name: 🚀 Create comprehensive GitHub Release
        if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'true')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}-docker
          name: "Arkitektur som kod v${{ github.run_number }} - Docker Complete Release"
          body: |
            📚 **Arkitektur som kod - Docker-based Complete Release**
            
            Genererad från commit: ${{ github.sha }}
            
            **🐳 Docker-optimized Build Process**
            
            ### 📦 Complete Release Package Innehåll:
            
            #### 📖 Book Formats (Docker-built)
            - `arkitektur_som_kod.pdf` - Complete PDF book
            - `arkitektur_som_kod.epub` - EPUB format for e-readers  
            - `arkitektur_som_kod.docx` - Microsoft Word format
            
            #### 🎤 Presentation Materials (Docker-built)
            - `arkitektur_som_kod_presentation.pptx` - PowerPoint presentation
            - Presentation outline and generation scripts
            
            #### 📄 Whitepapers (Docker-built)
            - Individual HTML whitepapers for each chapter
            - `whitepapers_combined.pdf` - All whitepapers in single PDF
            
            #### 🌐 Website
            - Complete static website build ready for deployment
            
            **🛠️ Build Information:**
            - 🐳 Built with Docker for consistent environment
            - 📦 Optimized caching for faster builds (~60 min vs ~90 min)
            - Pandoc with XeLaTeX PDF-engine
            - Mermaid diagrams converted to PNG
            - Node.js React application built for production
            - Python-generated presentations and whitepapers
            
            **📥 Download Options:**
            - Individual components from Assets below
            - `complete-release-docker.zip` - All deliverables in one archive
            
            🎯 **This Docker-based release includes ALL project deliverables with improved performance!**
          files: |
            release/book/arkitektur_som_kod.pdf
            release/book/arkitektur_som_kod.epub
            release/book/arkitektur_som_kod.docx
            release/presentation/arkitektur_som_kod_presentation.pptx
            release/whitepapers/whitepapers_combined.pdf
            complete-release-docker.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}