name: Auto draft PR + Codex safe workflow proposals (no direct workflow commits)

on:
  issues:
    types: [opened, reopened]
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]

permissions:
  contents: write
  pull-requests: write
  issues: write

env:
  TZ: Europe/Stockholm

jobs:
  create_draft_from_issue:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    env:
      REPO: ${{ github.repository }}
      ISSUE_NUMBER: ${{ github.event.issue.number }}
      ISSUE_TITLE: ${{ github.event.issue.title }}
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Determine default branch
        run: |
          set -euo pipefail
          DEFAULT_BRANCH=$(gh repo view "$REPO" --json defaultBranchRef --jq .defaultBranchRef.name)
          echo "DEFAULT_BRANCH=$DEFAULT_BRANCH" >> $GITHUB_ENV

      - name: Find or create branch
        run: |
          set -euo pipefail
          PREFIX="refs/heads/codex/issue-${ISSUE_NUMBER}-*"
          EXISTING=$(git ls-remote --heads origin "$PREFIX" | awk '{print $2}' | sed 's#refs/heads/##' | head -n1 || true)

          if [[ -n "$EXISTING" ]]; then
            BRANCH="$EXISTING"
            git fetch origin "$BRANCH" --depth=1
            git switch -C "$BRANCH" "origin/$BRANCH"
          else
            SLUG=$(echo "$ISSUE_TITLE" | tr '[:upper:]' '[:lower:]' | tr -cs 'a-z0-9' '-' | sed 's/^-//;s/-$//' | cut -c1-40)
            BRANCH="codex/issue-${ISSUE_NUMBER}${SLUG:+-$SLUG}"
            git fetch origin "$DEFAULT_BRANCH" --depth=1
            git switch -c "$BRANCH" "origin/$DEFAULT_BRANCH"
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git commit --allow-empty -m "Init draft for issue #${ISSUE_NUMBER}"
            git push --set-upstream origin "$BRANCH"
          fi
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Ensure draft PR exists
        id: pr
        run: |
          set -euo pipefail
          if gh pr view "$BRANCH" --repo "$REPO" --json number,url >/tmp/pr.json 2>/dev/null; then
            PR_NUMBER=$(jq -r .number </tmp/pr.json)
            PR_URL=$(jq -r .url </tmp/pr.json)
          else
            PR_URL=$(gh pr create \
              --base "$DEFAULT_BRANCH" \
              --head "$BRANCH" \
              --title "Draft: Issue #${ISSUE_NUMBER} – ${ISSUE_TITLE}" \
              --body "Auto-created draft PR for issue #${ISSUE_NUMBER}\n\nCloses #${ISSUE_NUMBER}" \
              --draft \
              --repo "$REPO")
            PR_NUMBER=$(gh pr view "$BRANCH" --repo "$REPO" --json number --jq .number)
          fi
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "PR_URL=$PR_URL" >> $GITHUB_ENV

      - name: Run Codex
        uses: openai/codex-action@v1
        timeout-minutes: 20
        continue-on-error: true
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          prompt: |
            You are Codex working on branch "${{ env.BRANCH }}" for PR #${{ env.PR_NUMBER }}.
            The PR is linked to issue #${{ env.ISSUE_NUMBER }}.

            Goal:
            - Apply minimal, targeted edits to resolve the issue.
            - If you modify any `.github/workflows/*.yml` files, include the new YAML directly.
            - Do not commit workflow files; they will be shown as a PR diff comment instead.
            - Update docs/tests if relevant.
            - Summarise what changed.

      - name: Handle workflow changes safely
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          CHANGED=$(git status --porcelain | awk '{print $2}')
          mapfile -t WF_FILES < <(printf '%s\n' $CHANGED | grep -E '^\.github/workflows/.*\.yml$' || true)

          if (( ${#WF_FILES[@]} )); then
            echo "::notice::Workflow edits detected — adding diff comment to PR #${PR_NUMBER}"
            for f in "${WF_FILES[@]}"; do
              echo "Processing workflow: $f"
              git diff -- "$f" > diff.patch
              gh pr comment "${PR_NUMBER}" --repo "$REPO" --body "$(printf "### ⚙️ Proposed workflow change\n**File:** %s\n\n\`\`\`diff\n%s\n\`\`\`" "$f" "$(cat diff.patch)")"
              rm -f diff.patch
              # Revert workflow file so we don't push it
              git checkout -- "$f"
            done
          fi

      - name: Commit & push non-workflow Codex changes (then mark PR ready)
        run: |
          set -euo pipefail
          if [[ -n "$(git status --porcelain)" ]]; then
            git add -A
            git commit -m "Codex auto-fix for issue #${ISSUE_NUMBER}"
            git push origin "${BRANCH}"
            echo "::notice::Committed and pushed non-workflow changes to ${BRANCH}"

            # If the PR is still draft, mark it ready for review
            IS_DRAFT=$(gh pr view "$PR_NUMBER" --repo "$REPO" --json isDraft --jq .isDraft || echo true)
            if [[ "$IS_DRAFT" == "true" ]]; then
              gh pr ready "$PR_NUMBER" --repo "$REPO"
              echo "::notice::Marked PR #$PR_NUMBER ready for review."
            fi
          else
            echo "::notice::No non-workflow changes to commit."
          fi

  codex_on_pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Checkout PR head
        uses: actions/checkout@v5
        with:
          ref: refs/pull/${{ github.event.pull_request.number }}/head
          fetch-depth: 0
          persist-credentials: true

      - name: Run Codex safely on PR
        uses: openai/codex-action@v1
        timeout-minutes: 20
        continue-on-error: true
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          prompt: |
            You are Codex working on PR #${{ github.event.pull_request.number }}.
            Apply minimal, targeted edits to resolve linked issues.
            If you need to modify `.github/workflows/*.yml`, include the YAML directly but do not commit it.
            Instead, the diff will be posted as a PR comment.

      - name: Handle workflow changes safely (PR event)
        run: |
          set -euo pipefail
          CHANGED=$(git status --porcelain | awk '{print $2}')
          mapfile -t WF_FILES < <(printf '%s\n' $CHANGED | grep -E '^\.github/workflows/.*\.yml$' || true)

          if (( ${#WF_FILES[@]} )); then
            echo "::notice::Workflow edits detected — adding diff comment to PR"
            for f in "${WF_FILES[@]}"; do
              git diff -- "$f" > diff.patch
              gh pr comment "${{ github.event.pull_request.number }}" --body "$(printf "### ⚙️ Proposed workflow change\n**File:** %s\n\n\`\`\`diff\n%s\n\`\`\`" "$f" "$(cat diff.patch)")"
              rm -f diff.patch
              git checkout -- "$f"
            done
          fi

      - name: Commit & push non-workflow Codex changes (then mark PR ready)
        run: |
          set -euo pipefail
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "Codex auto-fix for PR #${{ github.event.pull_request.number }}"
            HEAD_REF="${{ github.head_ref }}"
            [[ -z "$HEAD_REF" ]] && HEAD_REF=$(git rev-parse --abbrev-ref HEAD)
            git push origin "$HEAD_REF"
            echo "::notice::Committed and pushed non-workflow Codex changes."

            # If the PR is still draft, mark it ready for review
            IS_DRAFT=$(gh pr view "${{ github.event.pull_request.number }}" --json isDraft --jq .isDraft || echo true)
            if [[ "$IS_DRAFT" == "true" ]]; then
              gh pr ready "${{ github.event.pull_request.number }}"
              echo "::notice::Marked PR ready for review."
            fi
          else
            echo "::notice::No non-workflow Codex changes to commit."
          fi