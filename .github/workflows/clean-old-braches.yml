name: Cleanup Old Branches

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:  # Allow manual trigger

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required to delete branches

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main  # Checkout main branch
          fetch-depth: 0  # Fetch full history

      - name: Fetch all branches
        run: git fetch origin +refs/heads/*:refs/remotes/origin/*

      - name: Delete old branches
        run: |
          #!/bin/bash
          set -e
          
          # Get current time in Unix timestamp
          current_time=$(date +%s)
          two_days_ago=$((current_time - 2 * 24 * 3600))
          
          # List all remote branches except main and gh-pages
          branches=$(git branch -r | grep 'origin/' | sed 's/origin\///' | grep -v '^main$' | grep -v '^gh-pages$' | sed 's/^[[:space:]]*//')
          
          for branch in $branches; do
            # Skip if branch doesn't exist locally or remotely
            if ! git rev-parse --verify "origin/$branch" >/dev/null 2>&1; then
              echo "Skipping $branch: does not exist"
              continue
            fi
            
            # Get last commit timestamp for the branch
            commit_time=$(git log -1 --format=%ct "origin/$branch" 2>/dev/null || echo "0")
            
            if [ "$commit_time" -lt "$two_days_ago" ]; then
              echo "Deleting branch $branch (last commit: $(date -d "@$commit_time"))"
              git push origin --delete "$branch"
            else
              echo "Keeping branch $branch (last commit: $(date -d "@$commit_time"))"
            fi
          done