name: Close conflicted pull requests

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
  workflow_dispatch: # Allow manual triggering of the workflow.

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  close-conflicts:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Ensure compatibility with @actions/core and github-script.

      - name: Install Missing Dependency
        run: npm install @actions/core

      - name: Process Pull Requests
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            {
              const core = require('@actions/core');
              const { data: pullRequests } = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open',
              });

              for (const pr of pullRequests) {
                const prNumber = pr.number;

                // Check the mergeable state of the pull request
                let prDetails;
                for (let attempt = 0; attempt < 6; attempt += 1) {
                  ({ data: prDetails } = await github.rest.pulls.get({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    pull_number: prNumber,
                  }));

                  if (prDetails.mergeable !== null) {
                    break;
                  }

                  core.info(`Mergeability for PR #${prNumber} is unknown, waiting before retrying.`);
                  await new Promise((resolve) => setTimeout(resolve, 5000));
                }

                // Skip draft PRs - they are work in progress
                if (prDetails.draft) {
                  core.info(`Skipping PR #${prNumber} because it is a draft.`);
                  continue;
                }

                const hasConflicts = prDetails.mergeable === false && prDetails.mergeable_state === 'dirty';
                const noFilesChanged = prDetails.changed_files === 0;

                // Skip recently created PRs with no files (less than 5 minutes old) to give time for changes
                if (noFilesChanged) {
                  const createdAt = new Date(prDetails.created_at);
                  const now = new Date();
                  const ageInMinutes = (now - createdAt) / 1000 / 60;
                  if (ageInMinutes < 5) {
                    core.info(`Skipping PR #${prNumber} with no files because it was created ${ageInMinutes.toFixed(1)} minutes ago (too recent).`);
                    continue;
                  }
                }

                if (hasConflicts || noFilesChanged) {
                  const reason = hasConflicts
                    ? 'merge conflicts'
                    : 'no files being changed';
                  
                  // Create an issue to report the reason for closure
                  const issueTitle = `Pull Request #${prNumber} closed: ${reason}`;
                  const issueBody = `Pull request #${prNumber} was closed due to ${reason}.\n\nPull Request Link: ${prDetails.html_url}`;
                  const { data: issue } = await github.rest.issues.create({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    title: issueTitle,
                    body: issueBody,
                  });

                  core.info(`Created issue #${issue.number} for pull request #${prNumber} due to ${reason}.`);

                  // Close the pull request
                  await github.rest.pulls.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    pull_number: prNumber,
                    state: 'closed',
                  });

                  core.info(`Closed pull request #${prNumber} due to ${reason}.`);
                }
              }
            }