name: Build Site (native)

on:
  push:
    branches: [ main ]
    paths:
      - 'mkdocs.yml'
      - 'docs/**/*'
      - 'site/**/*'
      - 'package*.json'
      - 'pnpm-lock.yaml'
      - 'yarn.lock'
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}
  workflow_call: {}

permissions:
  contents: read

env:
  ARTIFACT_RETENTION_DAYS: 30

jobs:
  site:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python (for MkDocs)
        if: ${{ hashFiles('mkdocs.yml') != '' }}
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install MkDocs deps (if mkdocs.yml exists)
        if: ${{ hashFiles('mkdocs.yml') != '' }}
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material mkdocs-material-extensions

      - name: Set up Node (if package-lock.json exists)
        if: ${{ hashFiles('package-lock.json') != '' || hashFiles('pnpm-lock.yaml') != '' || hashFiles('yarn.lock') != '' }}
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: ${{ (hashFiles('pnpm-lock.yaml') != '' && 'pnpm') || (hashFiles('yarn.lock') != '' && 'yarn') || 'npm' }}

      - name: Install Node deps (npm/pnpm/yarn)
        if: ${{ hashFiles('package.json') != '' }}
        run: |
          if [ -f pnpm-lock.yaml ]; then
            npm i -g pnpm && pnpm i --frozen-lockfile
          elif [ -f yarn.lock ]; then
            npm i -g yarn && yarn install --frozen-lockfile
          elif [ -f package-lock.json ]; then
            npm ci --legacy-peer-deps
          else
            npm install
          fi

      - name: Build site
        run: |
          mkdir -p releases/website
          if [ -f "mkdocs.yml" ]; then
            echo "=== Building MkDocs site ==="
            mkdocs build -d site
            cp -r site/* releases/website/
          elif [ -f "package.json" ]; then
            echo "=== Building Node-based site ==="
            npm run build || npm run build:prod
            for d in dist build out .next; do
              [ -d "$d" ] && cp -r "$d" releases/website/ || true
            done
          else
            echo "No site tooling detected â€“ skipping."
          fi

      - name: Upload site artefacts
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: releases/website/
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
          if-no-files-found: warn
