name: Editor Agent

on:
  workflow_dispatch:
    inputs:
      objective:
        description: "Which documentation task should be completed?"
        required: true
      documentation_scope:
        description: "Which documents, sections, or formats should be updated?"
        required: false
        default: ""
      style_notes:
        description: "Guidelines, language notes, or sources that must be followed"
        required: false
        default: ""
  workflow_call:
    inputs:
      objective:
        required: true
        type: string
      documentation_scope:
        required: false
        type: string
        default: ""
      style_notes:
        required: false
        type: string
        default: ""
    outputs:
      plan:
        description: "Editor plan"
        value: ${{ jobs.plan.outputs.plan }}

jobs:
  plan:
    name: Compile documentation plan
    runs-on: ubuntu-latest
    outputs:
      plan: ${{ steps.compose.outputs.plan }}
    steps:
      - name: Compose plan
        id: compose
        env:
          OBJECTIVE: ${{ inputs.objective }}
          DOCUMENTATION_SCOPE: ${{ inputs.documentation_scope }}
          STYLE_NOTES: ${{ inputs.style_notes }}
        run: |
          set -euo pipefail
          objective="${OBJECTIVE:-No specific objective provided.}"
          scope_value="${DOCUMENTATION_SCOPE:-}"
          if [ -z "$scope_value" ]; then
            scope_value="No documentation scope provided."
          fi
          style_value="${STYLE_NOTES:-}"
          if [ -z "$style_value" ]; then
            style_value="No style or language notes provided."
          fi

          export AGENT_OBJECTIVE="$objective"
          export AGENT_SCOPE="$scope_value"
          export AGENT_STYLE="$style_value"

          summary=$(
            cat <<PLAN
# Editor plan

## Objectives
$AGENT_OBJECTIVE

## Documentation scope
$AGENT_SCOPE

## Style and language notes
$AGENT_STYLE

## Primary responsibilities from 28_ai_agent_team.md
- Create and update documentation in docs/ and related files.
- Ensure structure, language standards, and version tracking.
- Sync with the Requirements Analyst and Designer for the latest decisions.
- Compile sprint notes and knowledge materials.

## Recommended workflow
1. Review existing documents and identify what needs to change.
2. Update content according to guidelines and track changes in the changelog.
3. Verify that the documentation reflects the latest requirements, design, and implementation.
4. Coordinate with the Graphic Designer if visualizations need updates.
5. Deliver publication-ready material and notify the Project Manager.

## Deliverables
- Updated documents with version notes.
- Communication materials or release notes for the project owner.
- List of follow-up activities or missing sources.

## Checkpoints
- Ensure language review and consistent terminology.
- Keep docs/README.md updated with the latest changes.
- Confirm that QA and requirements artifacts are referenced correctly.
PLAN
          )

          printf '%s\n' "$summary"
          printf '%s\n' "$summary" >> "$GITHUB_STEP_SUMMARY"
          {
            echo "plan<<EOF"
            printf '%s\n' "$summary"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
