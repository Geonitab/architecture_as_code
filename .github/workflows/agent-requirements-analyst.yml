name: Requirements Analyst Agent

on:
  workflow_dispatch:
    inputs:
      objective:
        description: "Which requirements-related objective should the agent focus on?"
        required: true
      stakeholder_context:
        description: "Summary of stakeholder insights or business goals"
        required: false
        default: ""
      dependency_notes:
        description: "Identified dependencies or acceptance criteria to monitor"
        required: false
        default: ""
  workflow_call:
    inputs:
      objective:
        required: true
        type: string
      stakeholder_context:
        required: false
        type: string
        default: ""
      dependency_notes:
        required: false
        type: string
        default: ""
    outputs:
      plan:
        description: "Requirements Analyst plan"
        value: ${{ jobs.plan.outputs.plan }}

jobs:
  plan:
    name: Compile requirements plan
    runs-on: ubuntu-latest
    outputs:
      plan: ${{ steps.compose.outputs.plan }}
    steps:
      - name: Compose plan
        id: compose
        env:
          OBJECTIVE: ${{ inputs.objective }}
          STAKEHOLDER_CONTEXT: ${{ inputs.stakeholder_context }}
          DEPENDENCY_NOTES: ${{ inputs.dependency_notes }}
        run: |
          set -euo pipefail
          objective="${OBJECTIVE:-No specific objective provided.}"
          context_value="${STAKEHOLDER_CONTEXT:-}"
          if [ -z "$context_value" ]; then
            context_value="No stakeholder context provided."
          fi
          dependency_value="${DEPENDENCY_NOTES:-}"
          if [ -z "$dependency_value" ]; then
            dependency_value="No dependencies or acceptance criteria provided."
          fi

          export AGENT_OBJECTIVE="$objective"
          export AGENT_CONTEXT="$context_value"
          export AGENT_DEPENDENCIES="$dependency_value"

          summary=$(
            cat <<PLAN
# Requirements Analyst plan

## Objectives
$AGENT_OBJECTIVE

## Stakeholder context
$AGENT_CONTEXT

## Dependencies and acceptance criteria
$AGENT_DEPENDENCIES

## Primary responsibilities from 28_ai_agent_team.md
- Capture functional and non-functional requirements with clear traceability.
- Document user stories, acceptance criteria, and priorities.
- Perform gap analyses and keep the requirements baseline updated.
- Coordinate changes with the Designer, Developer, and Project Manager.

## Recommended workflow
1. Confirm the target outcome and identify the most important stakeholder needs.
2. Structure requirements in the backlog (epics, stories, acceptance criteria).
3. Validate requirements with the Architect for technical feasibility and with the Designer for UX impact.
4. Update the traceability matrix between requirements, design, implementation, and tests.
5. Escalate risks or uncertainties to the Project Manager and propose next steps.

## Deliverables
- Updated requirements backlog with priority and status.
- Documented acceptance criteria and supporting research.
- Recommended plan for upcoming refinement sessions or workshops.

## Checkpoints
- Ensure new requirements align with KPIs and quality goals.
- Coordinate with Quality Control on testable criteria.
- Inform the Editor about documentation updates.
PLAN
          )

          printf '%s\n' "$summary"
          printf '%s\n' "$summary" >> "$GITHUB_STEP_SUMMARY"
          {
            echo "plan<<EOF"
            printf '%s\n' "$summary"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
