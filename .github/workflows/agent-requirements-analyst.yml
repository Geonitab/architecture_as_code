name: Requirements Analyst Agent

on:
  workflow_dispatch:
    inputs:
      objective:
        description: "Vilket kravrelaterat mål ska agenten fokusera på?"
        required: true
      stakeholder_context:
        description: "Sammanfattning av stakeholder-insikter eller affärsmål"
        required: false
        default: ""
      dependency_notes:
        description: "Identifierade beroenden eller acceptanskriterier att bevaka"
        required: false
        default: ""
  workflow_call:
    inputs:
      objective:
        required: true
        type: string
      stakeholder_context:
        required: false
        type: string
        default: ""
      dependency_notes:
        required: false
        type: string
        default: ""
    outputs:
      plan:
        description: "Requirements Analystens plan"
        value: ${{ jobs.plan.outputs.plan }}

jobs:
  plan:
    name: Sammanställ kravplan
    runs-on: ubuntu-latest
    outputs:
      plan: ${{ steps.compose.outputs.plan }}
    steps:
      - name: Komponera plan
        id: compose
        env:
          OBJECTIVE: ${{ inputs.objective || github.event.inputs.objective }}
          STAKEHOLDER_CONTEXT: ${{ inputs.stakeholder_context || github.event.inputs.stakeholder_context }}
          DEPENDENCY_NOTES: ${{ inputs.dependency_notes || github.event.inputs.dependency_notes }}
        run: |
          set -euo pipefail
          objective="${OBJECTIVE:-Ingen specifik målsättning angiven.}"
          context_value="${STAKEHOLDER_CONTEXT:-}"
          if [ -z "$context_value" ]; then
            context_value="Ingen stakeholderkontext angiven."
          fi
          dependency_value="${DEPENDENCY_NOTES:-}"
          if [ -z "$dependency_value" ]; then
            dependency_value="Inga beroenden eller acceptanskriterier angivna."
          fi

          export AGENT_OBJECTIVE="$objective"
          export AGENT_CONTEXT="$context_value"
          export AGENT_DEPENDENCIES="$dependency_value"

          summary=$(
            cat <<'PLAN' | envsubst
# Requirements Analyst-agentens plan

## Mål
$AGENT_OBJECTIVE

## Stakeholderkontext
$AGENT_CONTEXT

## Beroenden och acceptanskriterier
$AGENT_DEPENDENCIES

## Primära ansvar enligt 28_ai_agent_team.md
- Fånga funktionella och icke-funktionella krav med tydlig spårbarhet.
- Dokumentera user stories, acceptanskriterier och prioriteringar.
- Utföra gap-analyser och hålla kravbasen uppdaterad.
- Synka förändringar med Designer, Developer och Project Manager.

## Rekommenderad arbetsgång
1. Bekräfta målbild och identifiera viktigaste stakeholder-behoven.
2. Strukturera krav i backlogg (epics, stories, acceptanskriterier).
3. Validera krav med Architect för teknisk genomförbarhet och med Designer för UX-konsekvenser.
4. Uppdatera spårbarhetsmatris mellan krav, design, implementation och tester.
5. Eskalera risker eller oklarheter till Project Manager och föreslå nästa steg.

## Leverabler
- Uppdaterad kravbacklogg med prioritet och status.
- Dokumenterade acceptanskriterier och kompletterande research.
- Rekommenderad plan för kommande refinement eller workshops.

## Kontrollpunkter
- Säkerställ att nya krav följer KPI:er och kvalitetsmål.
- Samordna med Quality Control kring testbara kriterier.
- Informera Editor om dokumentationsförändringar.
PLAN
          )

          printf '%s\n' "$summary"
          printf '%s\n' "$summary" >> "$GITHUB_STEP_SUMMARY"
          {
            echo "plan<<EOF"
            printf '%s\n' "$summary"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
